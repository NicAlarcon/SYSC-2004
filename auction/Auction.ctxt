#BlueJ class context
comment0.target=Auction
comment0.text=\r\n\ A\ simple\ model\ of\ an\ auction.\r\n\ The\ auction\ maintains\ a\ list\ of\ lots\ of\ arbitrary\ length.\r\n\r\n\ @author\ Nicolas\ Alarcon-Belanger\r\n\ @student_number\ 101066600\r\n\ @version\ 2019.02.07\r\n\ \r\n
comment1.params=
comment1.target=Auction()
comment1.text=\r\n\ Create\ a\ new\ auction.\r\n\ \r\n\ Uses\ ArrayList\ to\ group\ objects\:\ lots\r\n\ Defaulted\ auction\ is\ open\r\n
comment2.params=auction
comment2.target=Auction(Auction)
comment2.text=\r\n\ Provided\ the\ auction\ parameter\r\n\ is\ closed,\ the\ constructor\ creates\ a\ new\ auction\ containing\r\n\ the\ unsold\ lots\ of\ the\ closed\ auction.\ \ If\ the\ auction\ parameter\r\n\ is\ still\ open\ or\ null,\ this\ constructor\ behaves\ like\ the\r\n\ default\ constructor.\r\n\ \ \r\n\ @param\ auction\ Uses\ information\ from\ the\ auction\ lots\r\n
comment3.params=description
comment3.target=boolean\ enterLot(java.lang.String)
comment3.text=\r\n\ Enter\ a\ new\ lot\ into\ the\ auction\r\n\ This\ method\ has\ set\ conditions\ before\ creating\ a\ new\ lot\r\n\ \r\n\ @param\ description\ A\ description\ of\ the\ lot.\r\n\ @return\ false\ if\ auction\ is\ not\ open\ or\ is\ null\r\n\ @return\ true\ when\ initial\ conditions\ are\ passed\r\n
comment4.params=
comment4.target=void\ showLots()
comment4.text=\r\n\ Shows\ the\ full\ list\ of\ lots\ in\ this\ auction.\r\n\ Uses\ condition\ to\ test\ if\ lot\ is\ empty\ or\ not.\r\n\ If\ it\ passes\:\ prints\ lots\ in\ console.\r\n
comment5.params=lotNumber\ bidder\ value
comment5.target=boolean\ bidFor(int,\ Person,\ long)
comment5.text=\r\n\ Bid\ for\ a\ lot.\r\n\ \ \ \r\n\ Method\ used\ to\ bid\ for\ a\ selected\ lot.\r\n\ If\ initial\ conditions\ pass,\ a\ bid\ is\ testest\ against\ the\ lot.\r\n\ The\ outcome\ of\ the\ bid\ is\ outputted\ in\ the\ console.\r\n\r\n\ @param\ number\ The\ lot\ number\ being\ bid\ for.\r\n\ @param\ bidder\ The\ person\ bidding\ for\ the\ lot.\r\n\ @param\ value\ \ The\ value\ of\ the\ bid.\r\n\ @return\ false\ If\ auction\ conditions\ are\ not\ met\r\n\ @return\ true\ by\ default\r\n
comment6.params=lotNumber
comment6.target=Lot\ getLot(int)
comment6.text=\r\n\ Return\ the\ lot\ with\ the\ given\ number.\ \ \r\n\ Returns\ null\ if\ the\ lot\ does\ not\ exist.\r\n\ \r\n\ @param\ lotNumber\ The\ number\ of\ the\ lot\ to\ return.\r\n\ @return\ the\ Lot\ with\ the\ given\ number\r\n\ @return\ null\ when\ lot\ number\ is\ unable\ to\ be\ returned.\r\n
comment7.params=
comment7.target=boolean\ close()
comment7.text=\r\n\ Closes\ the\ auction\ and\ prints\ information\ on\ the\ lots.\r\n\ Console\ Outputs\ depending\ on\ condition\:\r\n\ If\ it\ did\ sell,\ the\ high\ bidder\ and\ bid\ value\ are\ also\ printed.\ \ \r\n\ If\ it\ didn't\ sell,\ print\ that\ it\ didn't\ sell.\r\n\r\n\ @return\ false\ if\ the\ auction\ is\ already\ closed,\ true\ otherwise.\r\n
comment8.params=
comment8.target=java.util.ArrayList\ getNoBids()
comment8.text=\r\n\ Returns\ an\ ArrayList\ containing\ all\ the\ items\ that\ have\ no\ bids\ so\ far.\r\n\ (or\ have\ not\ sold\ if\ the\ auction\ has\ ended).\r\n\ \r\n\ @return\ an\ ArrayList\ of\ the\ Lots\ which\ currently\ have\ no\ bids\r\n
comment9.params=number
comment9.target=boolean\ removeLot(int)
comment9.text=\r\n\ Remove\ the\ lot\ with\ the\ given\ lot\ number,\ as\ long\ as\ the\ lot\ has\r\n\ no\ bids,\ and\ the\ auction\ is\ open.\ \ \r\n\r\n\ @param\ number\ The\ number\ of\ the\ lot\ to\ be\ removed.\r\n\ @return\ true\ if\ successfull\r\n\ @return\ false\ if\ auction\ is\ closed,\ lot\ doesnt\ exist,\ or\ lot\ has\ a\ bid.\r\n
numComments=10
